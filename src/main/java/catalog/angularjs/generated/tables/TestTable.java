/**
 * This class is generated by jOOQ
 */
package catalog.angularjs.generated.tables;


import catalog.angularjs.generated.Keys;
import catalog.angularjs.generated.Public;
import catalog.angularjs.generated.tables.records.TestTableRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestTable extends TableImpl<TestTableRecord> {

	private static final long serialVersionUID = 1849067422;

	/**
	 * The reference instance of <code>public.test_table</code>
	 */
	public static final TestTable TEST_TABLE = new TestTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TestTableRecord> getRecordType() {
		return TestTableRecord.class;
	}

	/**
	 * The column <code>public.test_table.some_text</code>.
	 */
	public final TableField<TestTableRecord, String> SOME_TEXT = createField("some_text", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.test_table.id</code>.
	 */
	public final TableField<TestTableRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>public.test_table</code> table reference
	 */
	public TestTable() {
		this("test_table", null);
	}

	/**
	 * Create an aliased <code>public.test_table</code> table reference
	 */
	public TestTable(String alias) {
		this(alias, TEST_TABLE);
	}

	private TestTable(String alias, Table<TestTableRecord> aliased) {
		this(alias, aliased, null);
	}

	private TestTable(String alias, Table<TestTableRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TestTableRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TEST_TABLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TestTableRecord> getPrimaryKey() {
		return Keys.PK_TT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TestTableRecord>> getKeys() {
		return Arrays.<UniqueKey<TestTableRecord>>asList(Keys.PK_TT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestTable as(String alias) {
		return new TestTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TestTable rename(String name) {
		return new TestTable(name, null);
	}
}
