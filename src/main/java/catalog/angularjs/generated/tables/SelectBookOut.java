/**
 * This class is generated by jOOQ
 */
package catalog.angularjs.generated.tables;


import catalog.angularjs.generated.Public;
import catalog.angularjs.generated.tables.records.SelectBookOutRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SelectBookOut extends TableImpl<SelectBookOutRecord> {

	private static final long serialVersionUID = 1080577986;

	/**
	 * The reference instance of <code>public.select_book_out</code>
	 */
	public static final SelectBookOut SELECT_BOOK_OUT = new SelectBookOut();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SelectBookOutRecord> getRecordType() {
		return SelectBookOutRecord.class;
	}

	/**
	 * The column <code>public.select_book_out.select_book_out</code>.
	 */
	public final TableField<SelectBookOutRecord, Record> SELECT_BOOK_OUT_ = createField("select_book_out", org.jooq.impl.SQLDataType.RECORD, this, "");

	/**
	 * Create a <code>public.select_book_out</code> table reference
	 */
	public SelectBookOut() {
		this("select_book_out", null);
	}

	/**
	 * Create an aliased <code>public.select_book_out</code> table reference
	 */
	public SelectBookOut(String alias) {
		this(alias, SELECT_BOOK_OUT);
	}

	private SelectBookOut(String alias, Table<SelectBookOutRecord> aliased) {
		this(alias, aliased, new Field[1]);
	}

	private SelectBookOut(String alias, Table<SelectBookOutRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SelectBookOut as(String alias) {
		return new SelectBookOut(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public SelectBookOut rename(String name) {
		return new SelectBookOut(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public SelectBookOut call(Integer idBook) {
		return new SelectBookOut(getName(), null, new Field[] { DSL.val(idBook) });
	}

	/**
	 * Call this table-valued function
	 */
	public SelectBookOut call(Field<Integer> idBook) {
		return new SelectBookOut(getName(), null, new Field[] { idBook });
	}
}
