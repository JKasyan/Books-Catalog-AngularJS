/**
 * This class is generated by jOOQ
 */
package catalog.angularjs.generated.tables;


import catalog.angularjs.generated.Public;
import catalog.angularjs.generated.tables.records.SelectBooksRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SelectBooks extends TableImpl<SelectBooksRecord> {

	private static final long serialVersionUID = 1729533888;

	/**
	 * The reference instance of <code>public.select_books</code>
	 */
	public static final SelectBooks SELECT_BOOKS = new SelectBooks();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SelectBooksRecord> getRecordType() {
		return SelectBooksRecord.class;
	}

	/**
	 * The column <code>public.select_books.id_book</code>.
	 */
	public final TableField<SelectBooksRecord, Integer> ID_BOOK = createField("id_book", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.select_books.title</code>.
	 */
	public final TableField<SelectBooksRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.select_books.date_publish</code>.
	 */
	public final TableField<SelectBooksRecord, String> DATE_PUBLISH = createField("date_publish", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.select_books.short_description</code>.
	 */
	public final TableField<SelectBooksRecord, String> SHORT_DESCRIPTION = createField("short_description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>public.select_books.status</code>.
	 */
	public final TableField<SelectBooksRecord, Boolean> STATUS = createField("status", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * Create a <code>public.select_books</code> table reference
	 */
	public SelectBooks() {
		this("select_books", null);
	}

	/**
	 * Create an aliased <code>public.select_books</code> table reference
	 */
	public SelectBooks(String alias) {
		this(alias, SELECT_BOOKS);
	}

	private SelectBooks(String alias, Table<SelectBooksRecord> aliased) {
		this(alias, aliased, new Field[1]);
	}

	private SelectBooks(String alias, Table<SelectBooksRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SelectBooks as(String alias) {
		return new SelectBooks(alias, this, parameters);
	}

	/**
	 * Rename this table
	 */
	public SelectBooks rename(String name) {
		return new SelectBooks(name, null, parameters);
	}

	/**
	 * Call this table-valued function
	 */
	public SelectBooks call(Integer idBook) {
		return new SelectBooks(getName(), null, new Field[] { DSL.val(idBook) });
	}

	/**
	 * Call this table-valued function
	 */
	public SelectBooks call(Field<Integer> idBook) {
		return new SelectBooks(getName(), null, new Field[] { idBook });
	}
}
