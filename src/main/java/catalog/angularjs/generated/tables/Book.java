/**
 * This class is generated by jOOQ
 */
package catalog.angularjs.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.5" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Book extends org.jooq.impl.TableImpl<catalog.angularjs.generated.tables.records.BookRecord> {

	private static final long serialVersionUID = 490704063;

	/**
	 * The singleton instance of <code>public.book</code>
	 */
	public static final catalog.angularjs.generated.tables.Book BOOK = new catalog.angularjs.generated.tables.Book();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<catalog.angularjs.generated.tables.records.BookRecord> getRecordType() {
		return catalog.angularjs.generated.tables.records.BookRecord.class;
	}

	/**
	 * The column <code>public.book.id_book</code>.
	 */
	public final org.jooq.TableField<catalog.angularjs.generated.tables.records.BookRecord, java.lang.Integer> ID_BOOK = createField("id_book", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.book.short_description</code>.
	 */
	public final org.jooq.TableField<catalog.angularjs.generated.tables.records.BookRecord, java.lang.String> SHORT_DESCRIPTION = createField("short_description", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.book.date_publish</code>.
	 */
	public final org.jooq.TableField<catalog.angularjs.generated.tables.records.BookRecord, java.lang.String> DATE_PUBLISH = createField("date_publish", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>public.book.title</code>.
	 */
	public final org.jooq.TableField<catalog.angularjs.generated.tables.records.BookRecord, java.lang.String> TITLE = createField("title", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * Create a <code>public.book</code> table reference
	 */
	public Book() {
		this("book", null);
	}

	/**
	 * Create an aliased <code>public.book</code> table reference
	 */
	public Book(java.lang.String alias) {
		this(alias, catalog.angularjs.generated.tables.Book.BOOK);
	}

	private Book(java.lang.String alias, org.jooq.Table<catalog.angularjs.generated.tables.records.BookRecord> aliased) {
		this(alias, aliased, null);
	}

	private Book(java.lang.String alias, org.jooq.Table<catalog.angularjs.generated.tables.records.BookRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, catalog.angularjs.generated.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<catalog.angularjs.generated.tables.records.BookRecord> getPrimaryKey() {
		return catalog.angularjs.generated.Keys.BOOK_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<catalog.angularjs.generated.tables.records.BookRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<catalog.angularjs.generated.tables.records.BookRecord>>asList(catalog.angularjs.generated.Keys.BOOK_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public catalog.angularjs.generated.tables.Book as(java.lang.String alias) {
		return new catalog.angularjs.generated.tables.Book(alias, this);
	}

	/**
	 * Rename this table
	 */
	public catalog.angularjs.generated.tables.Book rename(java.lang.String name) {
		return new catalog.angularjs.generated.tables.Book(name, null);
	}
}
